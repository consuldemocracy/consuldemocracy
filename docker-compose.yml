
services:
  # Database service
  database:
    image: postgres:13.16-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis for caching and background jobs
  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Main application
  app: &app
    build: 
      context: .
      dockerfile: Dockerfile
    command: bundle exec rails server -b 0.0.0.0
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - .:/var/www/consul
      - bundle:/usr/local/bundle
      - node_modules:/var/www/consul/node_modules
      - tmp_data:/var/www/consul/tmp
      - storage_data:/var/www/consul/storage
    environment:
      - RAILS_ENV=${RAILS_ENV:-development}
      - DB_HOST=database
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=${POSTGRES_PASSWORD:-password}
      - REDIS_URL=redis://redis:6379/0
      - PGPASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    stdin_open: true
    tty: true

  # Background job worker
  worker:
    <<: *app
    command: bundle exec rails jobs:work
    ports: []
    depends_on:
      - app

volumes:
  db_data:
  redis_data:
  bundle:
  node_modules:
  tmp_data:
  storage_data: